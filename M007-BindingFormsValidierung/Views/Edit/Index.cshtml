@using System.Reflection
@using M006_Data.Models
@model Customer

<h3>Kunde: @Model</h3>
<form asp-action="Save">
	<ul>
		@{
			<li>
				<label>CustomerId</label>
				<input type="text" asp-for="@Model.CustomerId" />
				@*Validierung durchführen (Einschränkungen setzen per DataAnnotations in der Model Klasse)*@
				@*z.B. StringLength, Range, Required, ...*@
				@*Validierungstext anzeigen mittels asp-validation-for*@
				<span asp-validation-for="@Model.CustomerId"/>
			</li>
			<li>
				<label>ContactName</label>
				<input type="text" asp-for="@Model.ContactName" />
				<span asp-validation-for="@Model.ContactName" />
			</li>
			<li>
				<label>CompanyName</label>
				<input type="text" asp-for="@Model.CompanyName" />
				<span asp-validation-for="@Model.CompanyName" />
			</li>
			<li>
				<label>Phone</label>
				<input type="text" asp-for="@Model.Phone" />
				<span asp-validation-for="@Model.Phone" />
			</li>
			<li>
				<label>Country</label>
				<input type="text" asp-for="@Model.Country" />
				<span asp-validation-for="@Model.Country" />
			</li>
		}
	</ul>
	<div asp-validation-summary="ModelOnly">
		@*Validiert alle Felder, außer die die nicht in der View zu sehen sind*@
	</div>
	<button>Speichern</button>
</form>

@*Section: Legt ein Stück HTML/C#/JS Code lokal in der Page*@
@*Kann in Folge im _Layout.cshtml eingebunden werden*@
@*_Layout.cshtml: @await RenderSectionAsync("Scripts", required: false)*@
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}